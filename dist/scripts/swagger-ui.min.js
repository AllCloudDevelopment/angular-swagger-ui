"use strict";angular.module("swaggerUi",["ng","swaggerUiTemplates"]).directive("swaggerUi",function(){return{restrict:"A",controller:"swaggerUiController",templateUrl:"templates/swagger-ui.html",scope:{url:"=",tryIt:"=",errorHandler:"=",transformTryIt:"="}}}).controller("swaggerUiController",["$scope","$http","$sce","swaggerModel","swaggerClient",function(a,b,c,d,e){function f(){console.log(g),a.infos=g.info,a.infos.description=c.trustAsHtml(a.infos.description);var b=a.infos.contact;b&&(b.url=b.email?"mailto:"+b.email:b.url);var e=0,f=0,h={},i={},j=[];if(g.tags)for(var k=0,l=g.tags.length;l>k;k++){var m=g.tags[k];j.push(m),h[m.name]=k}else j.push({name:"default",open:!0}),h["default"]=0;for(var n in g.paths)for(var o in g.paths[n]){var p=g.paths[n][o];p.id=e,i[e]={contentType:p.consumes&&1===p.consumes.length?p.consumes[0]:"application/json",responseType:"application/json"},p.httpMethod=o,p.path=n;for(var q=0,r=p.parameters||[],s=r.length;s>q;q++){var t=r[q];t.id=f,t.type=d.getType(t),i[e][t.name]=t["default"]||"",t.schema&&(t.schema.display=1,t.schema.json=d.generateSampleJson(g,t.schema),t.schema.model=c.trustAsHtml(d.generateModel(g,t.schema))),f++}if(p.responses)for(var u in p.responses){var v=p.responses[u];if(v.description=c.trustAsHtml(v.description),v.schema){var w=d.generateSampleJson(g,v.schema);if("200"===u){var x=p.responseClass={status:u,display:-1};("array"===v.schema.type||v.schema.$ref)&&(x.display=1,x.json=w,x.model=c.trustAsHtml(d.generateModel(g,v.schema)))}else v.schema.json=w}}p.tags=p.tags||["default"];var y=j[h[p.tags[0]]];y.operations=y.operations||[],y.operations.push(p),e++}j.sort(function(a,b){return a.name>b.name?1:a.name<b.name?-1:0}),d.clearCache(),a.form=i,a.resources=j,console.log(j)}var g;a.$watch("url",function(c){if(a.infos={},a.resources=[],a.form={},c&&""!==c){var d="function"==typeof a.errorHandler;b.get(c).success(function(b){g=b,"2.0"===b.swagger?f(g):d&&a.errorHandler("unsupported swagger version","415")}).error(function(b,c){d&&a.errorHandler(b,c)})}}),a.expand=function(a,b){a.open=!0;for(var c=0,d=a.operations,e=d.length;e>c;c++)d[c].open=b},a.submitTryIt=function(b){b.loading=!0,e.send(g,b,a.form[b.id],a.transformTryIt).then(function(a){b.loading=!1,b.tryItResult=a})}}]).directive("fileInput",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){b.bind("change",function(){a.$apply(function(){d.$setViewValue(b[0].files[0])})})}}}),angular.module("swaggerUi").service("swaggerClient",["$q","$http",function(a,b){function c(a,b,c,d,e){a.resolve({url:e.url,response:{body:b?angular.isString(b)?b:angular.toJson(b,!0):"no content",status:c,headers:angular.toJson(d(),!0)}})}this.send=function(d,e,f,g){for(var h=a.defer(),i={},j={},k=e.path,l=0,m=e.parameters||[],n=m.length;n>l;l++){var o=m[l],p=f[o.name];switch(o["in"]){case"query":p&&(i[o.name]=p);break;case"path":k=k.replace("{"+o.name+"}",encodeURIComponent(p));break;case"header":p&&(j[o.name]=p);break;case"formData":f.body=f.body||new FormData,p&&("file"===o.type&&(f.contentType=void 0),f.body.append(o.name,p))}}j.Accept=f.responseType,j["Content-Type"]=f.body?f.contentType:"text/plain";var q={method:e.httpMethod,url:[d.schemes&&d.schemes[0]||"http","://",d.host,d.basePath||"",k].join(""),headers:j,data:f.body,params:i},r=function(a,b,d,e){c(h,a,b,d,e)};return"function"==typeof g&&g(q),b(q).success(r).error(r),h.promise}}]),angular.module("swaggerUi").service("swaggerModel",["$filter",function(a){function b(a){return a.$ref.replace("#/definitions/","")}function c(a,f){var h;if(f.$ref){var i=a.definitions&&a.definitions[b(f)];if(i){if(!e[f.$ref]){var j={};for(var k in i.properties)j[k]=c(a,i.properties[k]);e[f.$ref]=j}h=e[f.$ref]}}else h="array"===f.type?[c(a,f.items)]:d(g(f),f.defaultValue||f.example);return h}function d(b,c){var d;if("undefined"!=typeof c)d=c;else switch(b){case"long":case"integer":d=0;break;case"boolean":d=!1;break;case"double":case"number":d=0;break;case"string":d="string";break;case"date":d=a("date")(new Date,"yyyy-MM-dd");break;case"date-time":d=(new Date).toISOString()}return d}var e={},f={},g=this.getType=function(a){var b=a.format;switch(b){case"int32":b=a.type;break;case"int64":b="long"}return b||a.type};this.generateSampleJson=function(a,b){var d,e=c(a,b);return e&&(d=angular.toJson(e,!0)),d};var h=this.generateModel=function(a,c){function d(a,b){return a.required&&-1!==a.required.indexOf(b)}var e="";if(c.$ref){var i=b(c),j=a.definitions&&a.definitions[i];if(j){if(!f[c.$ref]){var k=["<strong>"+i+" {</strong>"],l=[];for(var m in j.properties){var n=j.properties[m],o=['<strong class="pad">'+m+'</strong> (<span class="type">'];n.$ref?(o.push(b(n)),l.push(h(a,n))):"array"===n.type?(o.push("Array["),n.items.$ref?(o.push(b(n.items)),l.push(h(a,n.items))):o.push(g(n.items)),o.push("]")):o.push(g(n)),o.push("</span>"),d(j,m)||o.push(", ","<em>optional</em>"),o.push(")"),n.description&&o.push(": ",n.description),n["enum"]&&o.push(" = ",angular.toJson(n["enum"]).replace(/,/g," or ")),o.push(","),k.push(o.join(""))}k.push("<strong>}</strong>"),k.push(l.join("")),f[c.$ref]=k.join("\n")}e=f[c.$ref]}}else"array"===c.type&&(e="<strong>array {\n\n}</strong>");return e};this.clearCache=function(){e={},f={}}}]),angular.module("swaggerUiTemplates",["templates/swagger-ui.html"]),angular.module("templates/swagger-ui.html",[]).run(["$templateCache",function(a){a.put("templates/swagger-ui.html",'<div class="swagger-ui" aria-live="polite" aria-relevant="additions removals"> <div class="api-name"> <h3 ng-bind="infos.title"></h3> </div> <div class="api-description" ng-bind-html="infos.description"></div> <div class="api-infos"> <div class="api-infos-contact" ng-if="infos.contact"> <a href="{{infos.contact.url}}">contact the developer</a> </div> <div class="api-infos-license" ng-if="infos.license"> <span>license: </span><a href="{{infos.license.url}}" ng-bind="infos.license.name"></a> </div> </div> <ul class="list-unstyled endpoints"> <li ng-repeat="api in resources" class="endpoint" ng-class="{active:api.open}"> <div class="clearfix"> <ul class="list-inline pull-left endpoint-heading"> <li> <h4> <a href="javascript:;" ng-click="api.open=!api.open" ng-bind="api.name"></a> <span ng-if="api.description"> : <span ng-bind="api.description"></span></span> </h4> </li> </ul> <ul class="list-inline pull-right endpoint-actions"> <li> <a href="javascript:;" ng-click="api.open=!api.open">open/hide</a> </li> <li> <a href="javascript:;" ng-click="expand(api)">list operations</a> </li> <li> <a href="javascript:;" ng-click="expand(api,true)">expand all</a> </li> </ul> </div> <ul class="list-unstyled collapse" ng-class="{in:api.open}"> <li ng-repeat="op in api.operations" class="operation {{op.httpMethod}}"> <div class="heading"> <a ng-click="op.open=!op.open" href="javascript:;"> <div> <span class="http-method text-uppercase" ng-bind="op.httpMethod"></span> <span class="path" ng-bind="op.path"></span> <span class="description pull-right" ng-bind="op.summary"></span> </div> </a> </div> <div class="content collapse" ng-class="{in:op.open}"> <div ng-if="op.description"> <h5>implementation notes</h5> <p ng-bind="op.description"></p> </div> <form role="form" name="tryItForm" ng-submit="tryItForm.$valid&&submitTryIt(op)"> <div ng-if="op.responseClass" class="response"> <h5>response class (status {{op.responseClass.status}})</h5> <div ng-if="op.responseClass.display!==-1"> <ul class="list-inline schema"> <li><a href="javascript:;" ng-click="op.responseClass.display=0" ng-class="{active:op.responseClass.display===0}">model</a></li> <li><a href="javascript:;" ng-click="op.responseClass.display=1" ng-class="{active:op.responseClass.display===1}">model schema</a></li> </ul> <pre class="model" ng-if="op.responseClass.display===0" ng-bind-html="op.responseClass.model"></pre> <pre ng-if="op.responseClass.display===1" ng-bind="op.responseClass.json"></pre> </div> <div ng-if="op.produces"> <label for="responseContentType{{op.id}}">response content type</label> <select ng-model="form[op.id].responseType" ng-options="item for item in op.produces track by item" id="responseContentType{{op.id}}" name="responseContentType{{op.id}}" required></select> </div> </div> <div ng-if="op.parameters" class="table-responsive"> <h5>parameters</h5> <table class="table table-condensed parameters"> <thead> <tr> <th class="name">parameter <th class="value">value <th class="desc">description <th class="type">parameter type <th class="data">data type   <tbody> <tr ng-repeat="param in op.parameters"> <td ng-class="{bold:param.required}"> <label for="param{{param.id}}" ng-bind="param.name"></label>  <td ng-class="{bold:param.required}"> <div ng-if="tryIt"> <div ng-if="param.in!==\'body\'" ng-switch="param.type"> <input ng-switch-when="file" type="file" file-input ng-model="form[op.id][param.name]" id="param{{param.id}}" placeholder="{{param.required?\'(required)\':\'\'}}" ng-required="param.required"> <input ng-switch-default type="text" ng-model="form[op.id][param.name]" id="param{{param.id}}" placeholder="{{param.required?\'(required)\':\'\'}}" ng-required="param.required"> </div> <div ng-if="param.in===\'body\'"> <textarea id="param{{param.id}}" ng-model="form[op.id][param.name]" ng-required="param.required"></textarea> <br> <div ng-if="op.consumes"> <label for="bodyContentType{{op.id}}">parameter content type</label> <select ng-model="form[op.id].contentType" id="bodyContentType{{op.id}}" name="bodyContentType{{op.id}}" ng-options="item for item in op.consumes track by item"></select> </div> </div> </div> <div ng-if="!tryIt"> <div ng-if="param.in!==\'body\'"> <div ng-if="param.default"><span ng-bind="param.default"></span> (default)</div> <div ng-if="param.required"><strong>(required)</strong></div> </div> </div>  <td ng-class="{bold:param.required}" ng-bind="param.description"> <td ng-bind="param.in"> <td ng-if="param.type" ng-switch="param.type"> <span ng-switch-when="array" ng-bind="\'Array[\'+param.items.type+\']\'"></span> <span ng-switch-default ng-bind="param.type"></span>  <td ng-if="param.schema"> <ul class="list-inline schema"> <li><a href="javascript:;" ng-click="param.schema.display=0" ng-class="{active:param.schema.display===0}">model</a></li> <li><a href="javascript:;" ng-click="param.schema.display=1" ng-class="{active:param.schema.display===1}">model schema</a></li> </ul> <pre class="model" ng-if="param.schema.display===0&&param.schema.model" ng-bind-html="param.schema.model"></pre> <div ng-if="param.schema.display===1&&param.schema.json"> <pre ng-bind="param.schema.json" ng-click="form[op.id][param.name]=param.schema.json" aria-described-by="help-{{param.id}}"></pre> <div id="help-{{param.id}}">click to set as parameter value</div> </div>    </table> </div> <div class="table-responsive"> <h5>response messages</h5> <table class="table responses"> <thead> <tr> <th class="code">HTTP status code <th>reason <th>response model   <tbody> <tr ng-repeat="(code, resp) in op.responses"> <td ng-bind="code"> <td ng-bind-html="resp.description"> <td> <pre ng-if="resp.schema&&resp.schema.json" ng-bind="resp.schema.json"></pre>    </table> </div> <div ng-if="tryIt"> <button class="btn btn-default" ng-click="op.tryItResult=false;op.hideTryItResult=false" type="submit" ng-disabled="op.loading" ng-bind="op.loading?\'loading...\':\'try it out!\'"></button> <a class="hide-try-it" ng-if="op.tryItResult&&!op.hideTryItResult" ng-click="op.hideTryItResult=true" href="javascript:;">hide response</a> </div> </form> <div ng-if="op.tryItResult" ng-show="!op.hideTryItResult"> <h5>request URL</h5> <pre ng-bind="op.tryItResult.url"></pre> <h5>response body</h5> <pre ng-bind="op.tryItResult.response.body"></pre> <h5>response code</h5> <pre ng-bind="op.tryItResult.response.status"></pre> <h5>response headers</h5> <pre ng-bind="op.tryItResult.response.headers"></pre> </div> </div> </li> </ul> </li> </ul> </div>')}]);